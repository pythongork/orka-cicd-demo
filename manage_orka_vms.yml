---
- name: Manage Orka VM
  hosts: localhost
  connection: local
  vars:
    vm_name: "cicd-vm-{{ ansible_date_time.epoch }}"
    base_image: "sonoma-90gb-orka3-arm"
  tasks:
    - name: Deploy Orka VM
      ansible.builtin.command:
        cmd: "orka3 vm deploy {{ vm_name }} --image {{ base_image }}"
      register: deploy_output
      changed_when: deploy_output.rc == 0
      failed_when: deploy_output.rc != 0

    - name: Get VM IP
      ansible.builtin.command:
        cmd: "orka3 vm list --name {{ vm_name }} --output json"
      register: vm_list_output
      changed_when: false
      when: deploy_output.rc == 0

    - name: Extract VM IP
      ansible.builtin.set_fact:
        vm_ip_address: "{{ (vm_list_output.stdout | from_json).vms[0].ip | default('') }}"
      when: vm_list_output.rc == 0

    - name: Wait for VM to be ready
      ansible.builtin.wait_for:
        host: "{{ vm_ip_address }}"
        port: 8822
        timeout: 300
      when: vm_ip_address != ''
      register: vm_ip
      failed_when: vm_ip.state != 'started'

    - block:
        - name: Configure Orka VM
          hosts: "{{ vm_ip_address }}"
          become: yes
          vars:
            ansible_user: admin
            ansible_port: 8822
            ansible_ssh_private_key_file: ~/.ssh/ansible_key
          tasks:
            - name: Copy SSH public key to VM
              ansible.builtin.authorized_key:
                user: admin
                key: "{{ lookup('file', '~/.ssh/ansible_key.pub') }}"
                state: present

            - name: Install Homebrew
              ansible.builtin.shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
              args:
                executable: /bin/bash
              register: homebrew_install
              failed_when: homebrew_install.rc != 0 and 'already installed' not in homebrew_install.stderr
              changed_when: homebrew_install.rc == 0

            - name: Install Git
              ansible.builtin.command: brew install git
              when: homebrew_install.rc == 0
              changed_when: true
      when: vm_ip_address != ''
      rescue:
        - name: Log configuration failure
          ansible.builtin.debug:
            msg: "VM configuration failed, proceeding to cleanup."
      always:
        - name: Delete Orka VM
          ansible.builtin.command:
            cmd: "orka3 vm delete {{ vm_name }}"
          changed_when: true
          when: deploy_output.rc == 0
