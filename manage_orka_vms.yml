---
- name: Spin up Orka VM
  hosts: localhost
  connection: local
  vars:
    vm_name: "cicd-vm-{{ ansible_date_time.epoch }}"
    base_image: "sonoma-90gb-orka3-arm"
  tasks:
    - name: Deploy Orka VM
      ansible.builtin.command:
        cmd: "orka3 vm deploy {{ vm_name }} --image {{ base_image }}"
      register: deploy_output
      changed_when: deploy_output.rc == 0
      failed_when: deploy_output.rc != 0

    - name: Wait for VM to be ready
      ansible.builtin.wait_for:
        host: "{{ deploy_output.stdout | regex_search('IP: (\\S+)', '\\1') | first }}"
        port: 8822
        timeout: 300
      register: vm_ip
      failed_when: vm_ip.state != 'started'

- name: Configure Orka VM
  hosts: "{{ deploy_output.stdout | regex_search('IP: (\\S+)', '\\1') | first }}"
  become: yes
  vars:
    ansible_user: admin
    ansible_port: 8822
    ansible_ssh_private_key_file: ~/.ssh/ansible_key
  tasks:
    - name: Copy SSH public key to VM
      ansible.builtin.authorized_key:
        user: admin
        key: "{{ lookup('file', '~/.ssh/ansible_key.pub') }}"
        state: present

    - name: Install Homebrew
      ansible.builtin.shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        executable: /bin/bash
      register: homebrew_install
      failed_when: homebrew_install.rc != 0 and 'already installed' not in homebrew_install.stderr
      changed_when: homebrew_install.rc == 0

    - name: Install Git
      ansible.builtin.command: brew install git
      when: homebrew_install.rc == 0
      changed_when: true

- name: Delete Orka VM
  hosts: localhost
  connection: local
  vars:
    vm_name: "cicd-vm-{{ ansible_date_time.epoch }}"
  tasks:
    - name: Delete Orka VM
      ansible.builtin.command:
        cmd: "orka3 vm delete {{ vm_name }}"
      when: vm_name is defined
      changed_when: true
